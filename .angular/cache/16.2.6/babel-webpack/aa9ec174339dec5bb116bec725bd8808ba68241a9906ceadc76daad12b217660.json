{"ast":null,"code":"import { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"./loader/loader.component\";\nfunction AppComponent_div_15_div_1_p_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const data_r1 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(data_r1.response);\n  }\n}\nfunction AppComponent_div_15_div_1_app_loader_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-loader\", 31);\n  }\n}\nfunction AppComponent_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"div\", 24)(2, \"div\", 25)(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 26)(8, \"div\", 27);\n    i0.ɵɵelement(9, \"img\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 28);\n    i0.ɵɵtemplate(11, AppComponent_div_15_div_1_p_11_Template, 2, 1, \"p\", 29);\n    i0.ɵɵtemplate(12, AppComponent_div_15_div_1_app_loader_12_Template, 1, 0, \"app-loader\", 30);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const data_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(data_r1.query);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r1.time);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", data_r1.response);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !data_r1.response);\n  }\n}\nfunction AppComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AppComponent_div_15_div_1_Template, 13, 4, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const data_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", data_r1.query.trim() !== \"\");\n  }\n}\nexport class AppComponent {\n  constructor(http) {\n    this.http = http;\n    this.djangoUrl = 'http://127.0.0.1:8000'; // Replace with your Django backend URL\n    this.testingdjangoUrl = 'http://127.0.0.1:8000/appname/alishba/'; // Replace with your Django backend URL\n    this.chatData = [{\n      query: \"\",\n      response: \"\",\n      time: \"\"\n    }\n    // Add more objects as needed\n    ];\n\n    this.inputValue = '';\n  }\n  sendQuery() {\n    if (this.inputValue.trim() !== '') {\n      const date = new Date(); // Replace this line with your date string\n      const ampm = date.getHours() >= 12 ? 'PM' : 'AM';\n      let query = this.inputValue;\n      const formattedTime = date.getHours() + ':' + date.getMinutes() + ' ' + ampm;\n      this.chatData.push({\n        query: this.inputValue,\n        response: '',\n        time: formattedTime\n      });\n      this.http.post(this.testingdjangoUrl, {\n        query: this.inputValue\n      }).pipe(tap(response => {\n        // Handle the response from the backend here\n        const index = this.chatData.findIndex(item => item.query === query);\n        if (index !== -1) {\n          this.chatData[index].response = this.formatResponse(response.response);\n          query = '';\n        }\n        console.log('Response from backend:', response);\n      }, error => {\n        console.error('Error in sending the query to the backend', error);\n      })).subscribe();\n      this.inputValue = ''; // Clear the input value after sending the query\n    }\n  }\n\n  formatResponse(response) {\n    const stepsRegex = /\\d+\\.\\s/g;\n    const stepsReplaced = response.replace(stepsRegex, match => {\n      return '\\n' + match;\n    });\n    return stepsReplaced;\n  }\n  refreshQuery() {\n    if (this.chatData.length > 0) {\n      const lastQuery = this.chatData[this.chatData.length - 1].query;\n      this.http.post(this.testingdjangoUrl, {\n        query: lastQuery\n      }).pipe(tap(response => {\n        // Handle the response from the backend here\n        const index = this.chatData.findIndex(item => item.query === lastQuery);\n        if (index !== -1) {\n          this.chatData[index].response = response.response;\n        }\n        console.log('Response from backend:', response);\n      }, error => {\n        console.error('Error in sending the query to the backend', error);\n      })).subscribe();\n    } else {\n      console.log('No queries available to refresh');\n    }\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 25,\n    vars: 2,\n    consts: [[1, \"container-fluid\", \"mainContainer\", \"bg-body-secondary\", \"d-flex\", \"align-items-center\", \"justify-content-center\"], [1, \"container\", \"contentContainer\", \"m-0\", \"p-0\"], [1, \"container\", \"navContainer\", \"m-0\", \"p-1\", \"bg-body-tertiary\", \"d-flex\", \"align-items-center\", \"justify-content-center\"], [1, \"navbar\", \"navbar-expand-lg\", \"navPortions\", \"col-12\", \"p-0\"], [1, \"container-sm\", \"m-0\"], [1, \"mainIcon\"], [1, \"logoDiv\"], [\"src\", \"assets/logo.png\", \"alt\", \"Logo\"], [1, \"mainIconHeaders\"], [\"href\", \"#\", 1, \"navbar-brand\", \"fw-medium\", \"lh-1\", 2, \"font-size\", \"14px\"], [\"href\", \"#\", 1, \"navbar-brand\", \"fw-lighter\", \"lh-1\", 2, \"font-size\", \"11px\"], [1, \"container\", \"chatContainer\"], [1, \"chats\"], [4, \"ngFor\", \"ngForOf\"], [1, \"container\", \"queryContainer\", \"m-0\", \"d-flex\", \"align-items-center\"], [1, \"queryEntryContainer\", \"m-0\", \"p-1\", \"bg-body-secondary\"], [\"type\", \"text\", \"placeholder\", \"Ask me anything.\", 1, \"queryInput\", 3, \"ngModel\", \"keyup.enter\", \"ngModelChange\"], [1, \"queryButtons\"], [\"type\", \"button \", 1, \"btn\", \"btn-primary\", \"m-1\", \"sendBtn\", 3, \"click\"], [\"src\", \"assets/send.png\", \"alt\", \"Send\", 1, \"iconImage\"], [\"type\", \"button \", 1, \"btn\", \"btn-primary\", \"m-1\", \"refreshBtn\", 3, \"click\"], [\"src\", \"assets/refresh.png\", \"alt\", \"Refresh\", 1, \"iconImage\"], [\"class\", \"chatDiv\", 4, \"ngIf\"], [1, \"chatDiv\"], [1, \"userQueryDiv\"], [1, \"userQuery\"], [1, \"response\"], [1, \"responseLogo\", \"logoDiv\"], [1, \"responseBox\"], [4, \"ngIf\"], [\"class\", \"Loader-class\", 4, \"ngIf\"], [1, \"Loader-class\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"nav\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6);\n        i0.ɵɵelement(7, \"img\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 8)(9, \"a\", 9);\n        i0.ɵɵtext(10, \"Salez.ai\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"a\", 10);\n        i0.ɵɵtext(12, \"Ai Bot\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(13, \"div\", 11)(14, \"div\", 12);\n        i0.ɵɵtemplate(15, AppComponent_div_15_Template, 2, 1, \"div\", 13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 14)(17, \"div\", 15)(18, \"input\", 16);\n        i0.ɵɵlistener(\"keyup.enter\", function AppComponent_Template_input_keyup_enter_18_listener() {\n          return ctx.sendQuery();\n        })(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_18_listener($event) {\n          return ctx.inputValue = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"div\", 17)(20, \"button\", 18);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_20_listener() {\n          return ctx.sendQuery();\n        });\n        i0.ɵɵelement(21, \"img\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"button\", 20);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_22_listener() {\n          return ctx.refreshQuery();\n        });\n        i0.ɵɵelement(23, \"img\", 21);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelement(24, \"router-outlet\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngForOf\", ctx.chatData);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.inputValue);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.RouterOutlet, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i5.LoaderComponent],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\", \"[_nghost-%COMP%] {\\n    font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";\\n    \\n    color: #333;\\n    box-sizing: border-box;\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n    --custom-send-color-green:#0ab39c;\\n    --custom-refresh-color-blue:#0e457e;\\n    --custom-chat-back-color:#f5f5f5;\\n    --custom-user-query-color:#dcedf9;\\n    --custom-response-color:#fafafa;\\n  }\\n  \\n  [_ngcontent-%COMP%]::-webkit-scrollbar {\\n  width: 5px;\\n}\\n\\n\\n\\n[_ngcontent-%COMP%]::-webkit-scrollbar-track {\\n  background: #f1f1f1;\\n}\\n\\n\\n\\n[_ngcontent-%COMP%]::-webkit-scrollbar-thumb {\\n  background: #888;\\n}\\n\\n\\n\\n[_ngcontent-%COMP%]::-webkit-scrollbar-thumb:hover {\\n  background: #555;\\n}\\n\\n  .mainContainer[_ngcontent-%COMP%]{\\n    height: 100vh;\\n    overflow: hidden;\\n  }\\n  .contentContainer[_ngcontent-%COMP%]{\\n    height: fit-content;\\n    background-color: var(--custom-chat-back-color);\\n    position: relative;\\n    margin: 0.5vh 0;\\n  }\\n  .navContainer[_ngcontent-%COMP%]{\\n\\n    overflow: hidden;\\n    padding:1rem 15px;\\n  \\n  }\\n  .navPortions[_ngcontent-%COMP%]{\\n    font-size: smaller;\\n\\n  }\\n  .mainIcon[_ngcontent-%COMP%]{\\n    display: flex;\\n    flex-direction: row;\\n    align-items: center;\\n\\n  }\\n\\n  .mainIcon[_ngcontent-%COMP%] > .logoDiv[_ngcontent-%COMP%]{\\n    background-color: var(--custom-chat-back-color);\\n  }\\n\\n  .logoDiv[_ngcontent-%COMP%] {\\n  border-radius: 50%;\\n  \\n  width: 2.5rem;\\n  height: 2.5rem;\\n  margin-right: 0.5rem;\\n  display: flex;\\n  justify-content: center; \\n\\n  align-items: center; \\n\\n  }\\n\\n  .responseLogo[_ngcontent-%COMP%]{\\n    background-color: rgb(252, 253, 253);\\n  }\\n  \\n\\n  .logoDiv[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n    max-width: 80%;\\n    max-height: 80%;\\n    display: block;\\n  }\\n\\n  .mainIconHeaders[_ngcontent-%COMP%]{\\n    display: flex;\\n    flex-direction: column;\\n    \\n  }\\n\\n  .chatContainer[_ngcontent-%COMP%]{\\n    background-color: var(--custom-chat-back-color);\\n    height:80vh ;\\n    overflow-x: hidden;\\n    overflow-y: scroll;\\n    padding: 0.3rem 0;\\n    background-color: #0ab39c;\\n  }\\n\\n  .chats[_ngcontent-%COMP%]{\\n    \\n    margin: 0.6rem 3rem;\\n    \\n  }\\n\\n  .userQuery[_ngcontent-%COMP%]{\\n    background-color: var(--custom-user-query-color);\\n    border-radius: 3px;\\n    padding: 0 0.4rem;\\n    font-size: small;\\n    margin-bottom: 0.2rem;\\n    max-width: 60%;\\n    align-self: flex-end;\\n    margin-left: auto;\\n    width: fit-content;\\n  }\\n  .userQueryDiv[_ngcontent-%COMP%] > p[_ngcontent-%COMP%]{\\n    font-size:x-small;\\n    align-self: flex-end;\\n    margin-left: auto;\\n  }\\n  .userQueryDiv[_ngcontent-%COMP%]{\\n    margin: 0.2rem 0;\\n    display: flex;\\n    flex-direction: column;  \\n\\n  }\\n  .response[_ngcontent-%COMP%]{\\n    align-self: flex-start;\\n    margin-right: auto;\\n    display: flex;\\n    flex-direction: row;\\n    margin-bottom: 0.5rem;\\n  }\\n  .responseBox[_ngcontent-%COMP%]{\\n    background-color: var(--custom-response-color);\\n    display: flex;\\n    justify-content: flex-end;\\n    padding: 0 0.4rem;\\n    font-size: small;\\n    width: fit-content;\\n    max-width: 60%;\\n    border-radius: 3px;\\n  }\\n\\n  .queryContainer[_ngcontent-%COMP%]{\\n    background-color: rgb(252, 253, 253);\\n    height:10vh;\\n\\n    width: 100%;\\n    justify-content: space-evenly;\\n    padding:0.5rem 15px;\\n  }\\n\\n  .queryEntryContainer[_ngcontent-%COMP%]{\\n    \\n    width:85%\\n  }\\n\\n  .queryEntryContainer[_ngcontent-%COMP%]{\\n    border-radius: 3px;\\n    height: 7vh;\\n    max-height: 2rem;\\n  }\\n  .queryButtons[_ngcontent-%COMP%]{\\n    \\n    display: flex;\\n    flex-direction: row;\\n  }\\n  .queryButtons[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]{\\n    border: none;\\n    overflow: hidden;\\n    display: flex;\\n    outline: none;\\n    align-items: center;\\n    justify-content: center;\\n    max-height: 2rem;\\n    max-width: 2rem;\\n    height: 7vh;\\n    width: 7vh;\\n    padding: 1vh;\\n  }\\n\\n  .iconImage[_ngcontent-%COMP%]{\\n    width: 90%;\\n    height: 90%;\\n  }\\n\\n  .sendBtn[_ngcontent-%COMP%]{\\n    background-color: var(--custom-send-color-green);\\n  }\\n\\n  .refreshBtn[_ngcontent-%COMP%]{\\n    background-color: var(--custom-refresh-color-blue) !important;\\n  }\\n\\n  .queryInput[_ngcontent-%COMP%]{\\n    background-color: transparent;\\n    outline: none;\\n    width: 100%;\\n    border: none;\\n    font-size: 1.2em;\\n  }\\n  .Loader-class[_ngcontent-%COMP%]{\\n    margin: 0 5px ;\\n    \\n\\n  }\\n  \\n\\n  @media screen and (max-width: 767px) {\\n    .card-container[_ngcontent-%COMP%]    > *[_ngcontent-%COMP%]:not(.circle-link), .terminal[_ngcontent-%COMP%] {\\n      width: 100%;\\n    }\\n\\n    .card[_ngcontent-%COMP%]:not(.highlight-card) {\\n      height: 16px;\\n      margin: 8px 0;\\n    }\\n\\n    .card.highlight-card[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n      margin-left: 72px;\\n    }\\n\\n    svg#rocket-smoke[_ngcontent-%COMP%] {\\n      right: 120px;\\n      transform: rotate(-5deg);\\n    }\\n  }\\n\\n  @media screen and (max-width: 575px) {\\n    svg#rocket-smoke[_ngcontent-%COMP%] {\\n      display: none;\\n      visibility: hidden;\\n    }\\n  }\"]\n  });\n}","map":{"version":3,"names":["tap","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","data_r1","response","ɵɵelement","ɵɵtemplate","AppComponent_div_15_div_1_p_11_Template","AppComponent_div_15_div_1_app_loader_12_Template","query","time","ɵɵproperty","AppComponent_div_15_div_1_Template","trim","AppComponent","constructor","http","djangoUrl","testingdjangoUrl","chatData","inputValue","sendQuery","date","Date","ampm","getHours","formattedTime","getMinutes","push","post","pipe","index","findIndex","item","formatResponse","console","log","error","subscribe","stepsRegex","stepsReplaced","replace","match","refreshQuery","length","lastQuery","_","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","AppComponent_div_15_Template","ɵɵlistener","AppComponent_Template_input_keyup_enter_18_listener","AppComponent_Template_input_ngModelChange_18_listener","$event","AppComponent_Template_button_click_20_listener","AppComponent_Template_button_click_22_listener"],"sources":["C:\\Users\\alishba.arshad\\Desktop\\Alishba\\Chatbot\\Project\\chatbot-frontend\\src\\app\\app.component.ts","C:\\Users\\alishba.arshad\\Desktop\\Alishba\\Chatbot\\Project\\chatbot-frontend\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n\nexport class AppComponent {\n\n  private djangoUrl = 'http://127.0.0.1:8000'; // Replace with your Django backend URL\n  private testingdjangoUrl = 'http://127.0.0.1:8000/appname/alishba/'; // Replace with your Django backend URL\n  chatData = [\n    { query: \"\", response: \"\", time: \"\" },\n    \n    // Add more objects as needed\n  ];\n\n\n  constructor(private http: HttpClient) {}\n\n  \n\n  inputValue: string = '';\n\n  sendQuery() {\n    if (this.inputValue.trim() !== '') {\n      const date = new Date(); // Replace this line with your date string\n      const ampm = date.getHours() >= 12 ? 'PM' : 'AM';\n      let query = this.inputValue;\n      const formattedTime = date.getHours() + ':' + date.getMinutes() + ' ' + ampm;\n      this.chatData.push({ query: this.inputValue, response: '', time: formattedTime });\n  \n      this.http.post(this.testingdjangoUrl, { query: this.inputValue }).pipe(\n        tap(\n          (response: any) => {\n            // Handle the response from the backend here\n            const index = this.chatData.findIndex(item => item.query === query);\n            if (index !== -1) {\n              this.chatData[index].response = this.formatResponse(response.response);\n              query = '';\n            }\n            console.log('Response from backend:', response);\n          },\n          (error: any) => {\n            console.error('Error in sending the query to the backend', error);\n          }\n        )\n      ).subscribe();\n      this.inputValue = ''; // Clear the input value after sending the query\n    }\n  }\n  \n  formatResponse(response: string): string {\n    const stepsRegex = /\\d+\\.\\s/g;\n    const stepsReplaced = response.replace(stepsRegex, (match) => {\n      return '\\n' + match;\n    });\n    return stepsReplaced;\n  }\n  \n  refreshQuery() {\n    if (this.chatData.length > 0) {\n      const lastQuery = this.chatData[this.chatData.length - 1].query;\n      this.http.post(this.testingdjangoUrl, { query: lastQuery }).pipe(\n        tap(\n          (response: any) => {\n            // Handle the response from the backend here\n            const index = this.chatData.findIndex(item => item.query ===lastQuery );\n            if (index !== -1) {\n              this.chatData[index].response = response.response;\n              \n            }\n            console.log('Response from backend:', response);\n          },\n          (error: any) => {\n            console.error('Error in sending the query to the backend', error);\n          }\n        )\n      ).subscribe();\n    } else {\n      console.log('No queries available to refresh');\n    }\n  }\n\n}\n\n","\n<style>\n  :host {\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n    \n    color: #333;\n    box-sizing: border-box;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    --custom-send-color-green:#0ab39c;\n    --custom-refresh-color-blue:#0e457e;\n    --custom-chat-back-color:#f5f5f5;\n    --custom-user-query-color:#dcedf9;\n    --custom-response-color:#fafafa;\n  }\n  \n  ::-webkit-scrollbar {\n  width: 5px;\n}\n\n/* Track */\n::-webkit-scrollbar-track {\n  background: #f1f1f1;\n}\n\n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: #888;\n}\n\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n  background: #555;\n}\n\n  .mainContainer{\n    height: 100vh;\n    overflow: hidden;\n  }\n  .contentContainer{\n    height: fit-content;\n    background-color: var(--custom-chat-back-color);\n    position: relative;\n    margin: 0.5vh 0;\n  }\n  .navContainer{\n\n    overflow: hidden;\n    padding:1rem 15px;\n  \n  }\n  .navPortions{\n    font-size: smaller;\n\n  }\n  .mainIcon{\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n  }\n\n  .mainIcon>.logoDiv{\n    background-color: var(--custom-chat-back-color);\n  }\n\n  .logoDiv {\n  border-radius: 50%;\n  \n  width: 2.5rem;\n  height: 2.5rem;\n  margin-right: 0.5rem;\n  display: flex;\n  justify-content: center; /* Horizontally align content */\n  align-items: center; /* Vertically align content */\n  }\n\n  .responseLogo{\n    background-color: rgb(252, 253, 253);\n  }\n  \n\n  .logoDiv img {\n    max-width: 80%;\n    max-height: 80%;\n    display: block;\n  }\n\n  .mainIconHeaders{\n    display: flex;\n    flex-direction: column;\n    \n  }\n\n  .chatContainer{\n    background-color: var(--custom-chat-back-color);\n    height:80vh ;\n    overflow-x: hidden;\n    overflow-y: scroll;\n    padding: 0.3rem 0;\n    background-color: #0ab39c;\n  }\n\n  .chats{\n    \n    margin: 0.6rem 3rem;\n    \n  }\n\n  .userQuery{\n    background-color: var(--custom-user-query-color);\n    border-radius: 3px;\n    padding: 0 0.4rem;\n    font-size: small;\n    margin-bottom: 0.2rem;\n    max-width: 60%;\n    align-self: flex-end;\n    margin-left: auto;\n    width: fit-content;\n  }\n  .userQueryDiv>p{\n    font-size:x-small;\n    align-self: flex-end;\n    margin-left: auto;\n  }\n  .userQueryDiv{\n    margin: 0.2rem 0;\n    display: flex;\n    flex-direction: column;  \n\n  }\n  .response{\n    align-self: flex-start;\n    margin-right: auto;\n    display: flex;\n    flex-direction: row;\n    margin-bottom: 0.5rem;\n  }\n  .responseBox{\n    background-color: var(--custom-response-color);\n    display: flex;\n    justify-content: flex-end;\n    padding: 0 0.4rem;\n    font-size: small;\n    width: fit-content;\n    max-width: 60%;\n    border-radius: 3px;\n  }\n\n  .queryContainer{\n    background-color: rgb(252, 253, 253);\n    height:10vh;\n\n    width: 100%;\n    justify-content: space-evenly;\n    padding:0.5rem 15px;\n  }\n\n  .queryEntryContainer{\n    \n    width:85%\n  }\n\n  .queryEntryContainer{\n    border-radius: 3px;\n    height: 7vh;\n    max-height: 2rem;\n  }\n  .queryButtons{\n    \n    display: flex;\n    flex-direction: row;\n  }\n  .queryButtons>button{\n    border: none;\n    overflow: hidden;\n    display: flex;\n    outline: none;\n    align-items: center;\n    justify-content: center;\n    max-height: 2rem;\n    max-width: 2rem;\n    height: 7vh;\n    width: 7vh;\n    padding: 1vh;\n  }\n\n  .iconImage{\n    width: 90%;\n    height: 90%;\n  }\n\n  .sendBtn{\n    background-color: var(--custom-send-color-green);\n  }\n\n  .refreshBtn{\n    background-color: var(--custom-refresh-color-blue) !important;\n  }\n\n  .queryInput{\n    background-color: transparent;\n    outline: none;\n    width: 100%;\n    border: none;\n    font-size: 1.2em;\n  }\n  .Loader-class{\n    margin: 0 5px ;\n    \n\n  }\n  /* Responsive Styles */\n  @media screen and (max-width: 767px) {\n    .card-container > *:not(.circle-link) ,\n    .terminal {\n      width: 100%;\n    }\n\n    .card:not(.highlight-card) {\n      height: 16px;\n      margin: 8px 0;\n    }\n\n    .card.highlight-card span {\n      margin-left: 72px;\n    }\n\n    svg#rocket-smoke {\n      right: 120px;\n      transform: rotate(-5deg);\n    }\n  }\n\n  @media screen and (max-width: 575px) {\n    svg#rocket-smoke {\n      display: none;\n      visibility: hidden;\n    }\n  }\n</style>\n\n\n<div class=\"container-fluid mainContainer bg-body-secondary d-flex align-items-center justify-content-center \">\n  <div class=\"container  contentContainer m-0 p-0\" >\n    <div class=\"container navContainer  m-0 p-1 bg-body-tertiary d-flex align-items-center justify-content-center\" >\n      <nav class=\"navbar navbar-expand-lg  navPortions col-12 p-0\">\n        <div class=\"container-sm m-0 \">\n          <div class=\"mainIcon\">\n            <div class=\"logoDiv\">\n              <img src=\"assets/logo.png\" alt=\"Logo\"/>\n            </div>\n            <div class=\"mainIconHeaders\">\n              <a class=\"navbar-brand  fw-medium lh-1 \" style=\"font-size: 14px;\" href=\"#\">Salez.ai</a>\n              <a class=\"navbar-brand  fw-lighter lh-1 \" style=\"font-size: 11px;\" href=\"#\">Ai Bot</a>\n            </div>\n\n          </div>\n\n\n        </div>\n      </nav>\n    </div>\n    <div class=\"container chatContainer\">\n      \n      <div class=\"chats\">\n        <div *ngFor=\"let data of chatData\">\n        <div class=\"chatDiv\"  *ngIf=\"data.query.trim() !== ''\">\n          <div class=\"userQueryDiv\">\n            <div class=\"userQuery\">\n              <p>{{ data.query }}</p>\n            </div>\n            <p>{{ data.time }}</p>\n\n          </div>\n\n          <div class=\"response\">\n            <div class=\"responseLogo logoDiv\">\n              <img src=\"assets/logo.png\" alt=\"Logo\"/>\n            </div>\n            <div class=\"responseBox\">\n              <p *ngIf=\"data.response\">{{ data.response }}</p>\n              <app-loader class=\"Loader-class\" *ngIf=\"!data.response\"></app-loader>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n      \n\n    </div>\n    <div class=\"container queryContainer m-0 d-flex align-items-center\">\n      <div class=\"queryEntryContainer m-0 p-1 bg-body-secondary\">\n        <input class=\"queryInput\" type=\"text\" placeholder=\"Ask me anything.\" (keyup.enter)=\"sendQuery()\" [(ngModel)]=\"inputValue\" />\n      </div>\n      \n      \n      <div class=\"queryButtons\">\n        \n          <button type=\"button \" class=\"btn btn-primary m-1 sendBtn\" (click)=\"sendQuery()\">\n            <img class=\"iconImage\" src=\"assets/send.png\" alt=\"Send\">\n          </button>\n\n        \n        \n          <button type=\"button \" class=\"btn btn-primary m-1 refreshBtn\" (click)=\"refreshQuery()\">\n            <img class=\"iconImage\" src=\"assets/refresh.png\" alt=\"Refresh\">\n          </button>\n\n      </div> \n\n\n    </div>\n  </div>\n</div>\n\n<router-outlet></router-outlet>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}