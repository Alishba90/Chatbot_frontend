{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nfunction AppComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"div\", 23)(2, \"div\", 24)(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 25)(8, \"div\", 26);\n    i0.ɵɵelement(9, \"img\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 27)(11, \"p\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const data_r1 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(data_r1.query);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r1.time);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(data_r1.response);\n  }\n}\nexport class AppComponent {\n  constructor(http) {\n    this.http = http;\n    this.djangoUrl = 'http://127.0.0.1:8000'; // Replace with your Django backend URL\n    this.chatData = [{\n      query: \"First Query\",\n      response: \"First Response\",\n      time: \"First Time\"\n    }, {\n      query: \"Second Query\",\n      response: \"Second Response\",\n      time: \"Second Time\"\n    }\n    // Add more objects as needed\n    ];\n\n    this.inputValue = '';\n  }\n  updateResponse(query) {\n    this.http.post(this.djangoUrl, {\n      query\n    }).subscribe(response => {\n      const index = this.chatData.findIndex(item => item.query === query);\n      if (index !== -1) {\n        this.chatData[index].response = response.response;\n      }\n    });\n  }\n  sendQuery() {\n    if (this.inputValue.trim() !== '') {\n      this.chatData.push({\n        query: this.inputValue,\n        response: '',\n        time: new Date().toLocaleString()\n      });\n      this.http.post(this.djangoUrl, {\n        query: this.inputValue\n      }).subscribe(response => {\n        // Handle the response from the backend here\n        console.log('Response from backend:', response);\n      }, error => {\n        console.error('Error in sending the query to the backend', error);\n      });\n      this.inputValue = ''; // Clear the input value after sending the query\n    }\n  }\n\n  refreshQuery() {\n    if (this.chatData.length > 0) {\n      const lastQuery = this.chatData[this.chatData.length - 1].query;\n      this.http.post(this.djangoUrl, {\n        query: lastQuery\n      }).subscribe(response => {\n        // Handle the response from the backend here\n        console.log('Response from backend:', response);\n      }, error => {\n        console.error('Error in sending the query to the backend', error);\n      });\n    } else {\n      console.log('No queries available to refresh');\n    }\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 25,\n    vars: 2,\n    consts: [[1, \"container-fluid\", \"mainContainer\", \"bg-body-secondary\", \"d-flex\", \"align-items-center\", \"justify-content-center\"], [1, \"container\", \"contentContainer\", \"m-0\", \"p-0\"], [1, \"container\", \"navContainer\", \"m-0\", \"p-1\", \"bg-body-tertiary\", \"d-flex\", \"align-items-center\", \"justify-content-center\"], [1, \"navbar\", \"navbar-expand-lg\", \"navPortions\", \"col-12\", \"p-0\"], [1, \"container-sm\", \"m-0\"], [1, \"mainIcon\"], [1, \"logoDiv\"], [\"src\", \"assets/logo.png\", \"alt\", \"Logo\"], [1, \"mainIconHeaders\"], [\"href\", \"#\", 1, \"navbar-brand\", \"fw-medium\", \"lh-1\", 2, \"font-size\", \"14px\"], [\"href\", \"#\", 1, \"navbar-brand\", \"fw-lighter\", \"lh-1\", 2, \"font-size\", \"11px\"], [1, \"container\", \"chatContainer\"], [1, \"chats\"], [\"class\", \"chatDiv\", 4, \"ngFor\", \"ngForOf\"], [1, \"container\", \"queryContainer\", \"m-0\", \"d-flex\", \"align-items-center\"], [1, \"queryEntryContainer\", \"m-0\", \"p-1\", \"bg-body-secondary\"], [\"type\", \"text\", \"placeholder\", \"Ask me anything.\", 1, \"queryInput\", 3, \"ngModel\", \"keyup.enter\", \"ngModelChange\"], [1, \"queryButtons\"], [\"type\", \"button \", 1, \"btn\", \"btn-primary\", \"m-1\", \"sendBtn\", 3, \"click\"], [\"src\", \"assets/send.png\", \"alt\", \"Send\", 1, \"iconImage\"], [\"type\", \"button \", 1, \"btn\", \"btn-primary\", \"m-1\", \"refreshBtn\", 3, \"click\"], [\"src\", \"assets/refresh.png\", \"alt\", \"Refresh\", 1, \"iconImage\"], [1, \"chatDiv\"], [1, \"userQueryDiv\"], [1, \"userQuery\"], [1, \"response\"], [1, \"responseLogo\", \"logoDiv\"], [1, \"responseBox\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"nav\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6);\n        i0.ɵɵelement(7, \"img\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 8)(9, \"a\", 9);\n        i0.ɵɵtext(10, \"Salez.ai\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"a\", 10);\n        i0.ɵɵtext(12, \"Ai Bot\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(13, \"div\", 11)(14, \"div\", 12);\n        i0.ɵɵtemplate(15, AppComponent_div_15_Template, 13, 3, \"div\", 13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 14)(17, \"div\", 15)(18, \"input\", 16);\n        i0.ɵɵlistener(\"keyup.enter\", function AppComponent_Template_input_keyup_enter_18_listener($event) {\n          return ctx.sendQuery($event);\n        })(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_18_listener($event) {\n          return ctx.inputValue = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"div\", 17)(20, \"button\", 18);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_20_listener() {\n          return ctx.sendQuery();\n        });\n        i0.ɵɵelement(21, \"img\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"button\", 20);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_22_listener() {\n          return ctx.refreshQuery();\n        });\n        i0.ɵɵelement(23, \"img\", 21);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelement(24, \"router-outlet\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngForOf\", ctx.chatData);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.inputValue);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.RouterOutlet, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\", \"[_nghost-%COMP%] {\\n    font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";\\n    \\n    color: #333;\\n    box-sizing: border-box;\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n    --custom-send-color-green:#0ab39c;\\n    --custom-refresh-color-blue:#0e457e;\\n    --custom-chat-back-color:#f5f5f5;\\n    --custom-user-query-color:#dcedf9;\\n    --custom-response-color:#fafafa;\\n  }\\n  \\n  [_ngcontent-%COMP%]::-webkit-scrollbar {\\n  width: 5px;\\n}\\n\\n\\n\\n[_ngcontent-%COMP%]::-webkit-scrollbar-track {\\n  background: #f1f1f1;\\n}\\n\\n\\n\\n[_ngcontent-%COMP%]::-webkit-scrollbar-thumb {\\n  background: #888;\\n}\\n\\n\\n\\n[_ngcontent-%COMP%]::-webkit-scrollbar-thumb:hover {\\n  background: #555;\\n}\\n\\n  .mainContainer[_ngcontent-%COMP%]{\\n    height: 100vh;\\n    overflow: hidden;\\n  }\\n  .contentContainer[_ngcontent-%COMP%]{\\n    height: 90%;\\n    background-color: var(--custom-chat-back-color);\\n    position: relative;\\n  }\\n  .navContainer[_ngcontent-%COMP%]{\\n\\n    overflow: hidden;\\n    padding:1rem 15px;\\n  \\n  }\\n  .navPortions[_ngcontent-%COMP%]{\\n    font-size: smaller;\\n\\n  }\\n  .mainIcon[_ngcontent-%COMP%]{\\n    display: flex;\\n    flex-direction: row;\\n    align-items: center;\\n\\n  }\\n\\n  .mainIcon[_ngcontent-%COMP%] > .logoDiv[_ngcontent-%COMP%]{\\n    background-color: var(--custom-chat-back-color);\\n  }\\n\\n  .logoDiv[_ngcontent-%COMP%] {\\n  border-radius: 50%;\\n  \\n  width: 2.5rem;\\n  height: 2.5rem;\\n  margin-right: 0.5rem;\\n  display: flex;\\n  justify-content: center; \\n\\n  align-items: center; \\n\\n  }\\n\\n  .responseLogo[_ngcontent-%COMP%]{\\n    background-color: rgb(252, 253, 253);\\n  }\\n  \\n\\n  .logoDiv[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n    max-width: 80%;\\n    max-height: 80%;\\n    display: block;\\n  }\\n\\n  .mainIconHeaders[_ngcontent-%COMP%]{\\n    display: flex;\\n    flex-direction: column;\\n    \\n  }\\n\\n  .chatContainer[_ngcontent-%COMP%]{\\n    background-color: var(--custom-chat-back-color);\\n    height:85% ;\\n    overflow-x: hidden;\\n    overflow-y: scroll;\\n  }\\n\\n  .chats[_ngcontent-%COMP%]{\\n    \\n    margin: 0.5rem 3rem;\\n    \\n  }\\n\\n  .userQuery[_ngcontent-%COMP%]{\\n    background-color: var(--custom-user-query-color);\\n    border-radius: 3px;\\n    padding: 0 0.4rem;\\n    font-size: small;\\n    margin-bottom: 0.2rem;\\n    max-width: 60%;\\n    align-self: flex-end;\\n    margin-left: auto;\\n    width: fit-content;\\n  }\\n  .userQueryDiv[_ngcontent-%COMP%] > p[_ngcontent-%COMP%]{\\n    font-size:x-small;\\n    align-self: flex-end;\\n    margin-left: auto;\\n  }\\n  .userQueryDiv[_ngcontent-%COMP%]{\\n    margin: 0.2rem 0;\\n    display: flex;\\n    flex-direction: column;  \\n\\n  }\\n  .response[_ngcontent-%COMP%]{\\n    align-self: flex-start;\\n    margin-right: auto;\\n    display: flex;\\n    flex-direction: row;\\n    margin-bottom: 0.2rem;\\n  }\\n  .responseBox[_ngcontent-%COMP%]{\\n    background-color: var(--custom-response-color);\\n    display: flex;\\n    justify-content: flex-end;\\n    padding: 0 0.4rem;\\n    font-size: small;\\n    width: fit-content;\\n    max-width: 60%;\\n    border-radius: 3px;\\n  }\\n\\n  .queryContainer[_ngcontent-%COMP%]{\\n    background-color: rgb(252, 253, 253);\\n    height:fit-content;\\n    width: 100%;\\n    justify-content: space-evenly;\\n    position: absolute;\\n    bottom: 0;\\n    padding:0.5rem 15px;\\n  }\\n\\n  .queryEntryContainer[_ngcontent-%COMP%]{\\n    \\n    width:85%\\n  }\\n\\n  .queryEntryContainer[_ngcontent-%COMP%]{\\n    border-radius: 3px;\\n\\n  }\\n  .queryButtons[_ngcontent-%COMP%]{\\n    \\n    display: flex;\\n    flex-direction: row;\\n  }\\n  .queryButtons[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]{\\n    border: none;\\n    overflow: hidden;\\n    display: flex;\\n    outline: none;\\n    align-items: center;\\n    justify-content: center;\\n    height: 2rem;\\n    width: 2rem;\\n  }\\n\\n  .iconImage[_ngcontent-%COMP%]{\\n    width: 1rem;\\n    height: 1rem;\\n  }\\n\\n  .sendBtn[_ngcontent-%COMP%]{\\n    background-color: var(--custom-send-color-green);\\n  }\\n\\n  .refreshBtn[_ngcontent-%COMP%]{\\n    background-color: var(--custom-refresh-color-blue) !important;\\n  }\\n\\n  .queryInput[_ngcontent-%COMP%]{\\n    background-color: transparent;\\n    outline: none;\\n    width: 100%;\\n    border: none;\\n    font-size: 0.8rem;\\n  }\\n  \\n\\n  @media screen and (max-width: 767px) {\\n    .card-container[_ngcontent-%COMP%]    > *[_ngcontent-%COMP%]:not(.circle-link), .terminal[_ngcontent-%COMP%] {\\n      width: 100%;\\n    }\\n\\n    .card[_ngcontent-%COMP%]:not(.highlight-card) {\\n      height: 16px;\\n      margin: 8px 0;\\n    }\\n\\n    .card.highlight-card[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n      margin-left: 72px;\\n    }\\n\\n    svg#rocket-smoke[_ngcontent-%COMP%] {\\n      right: 120px;\\n      transform: rotate(-5deg);\\n    }\\n  }\\n\\n  @media screen and (max-width: 575px) {\\n    svg#rocket-smoke[_ngcontent-%COMP%] {\\n      display: none;\\n      visibility: hidden;\\n    }\\n  }\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","data_r1","query","time","response","AppComponent","constructor","http","djangoUrl","chatData","inputValue","updateResponse","post","subscribe","index","findIndex","item","sendQuery","trim","push","Date","toLocaleString","console","log","error","refreshQuery","length","lastQuery","_","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵtemplate","AppComponent_div_15_Template","ɵɵlistener","AppComponent_Template_input_keyup_enter_18_listener","$event","AppComponent_Template_input_ngModelChange_18_listener","AppComponent_Template_button_click_20_listener","AppComponent_Template_button_click_22_listener","ɵɵproperty"],"sources":["C:\\Users\\alishba.arshad\\Desktop\\Alishba\\Chatbot\\Project\\chatbot-frontend\\src\\app\\app.component.ts","C:\\Users\\alishba.arshad\\Desktop\\Alishba\\Chatbot\\Project\\chatbot-frontend\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n\nexport class AppComponent {\n\n  private djangoUrl = 'http://127.0.0.1:8000'; // Replace with your Django backend URL\n\n  chatData = [\n    { query: \"First Query\", response: \"First Response\", time: \"First Time\" },\n    { query: \"Second Query\", response: \"Second Response\", time: \"Second Time\" },\n    // Add more objects as needed\n  ];\n\n\n  constructor(private http: HttpClient) {}\n\n  updateResponse(query: string) {\n    this.http.post(this.djangoUrl, { query }).subscribe((response: any) => {\n      const index = this.chatData.findIndex(item => item.query === query);\n      if (index !== -1) {\n        this.chatData[index].response = response.response;\n        \n      }\n    });\n  }\n\n  inputValue: string = '';\n\n  sendQuery() {\n    \n    if (this.inputValue.trim() !== '') {\n      this.chatData.push({ query: this.inputValue, response: '', time: new Date().toLocaleString() });\n      this.http.post(this.djangoUrl, { query: this.inputValue }).subscribe(\n        (response: any) => {\n          // Handle the response from the backend here\n          console.log('Response from backend:', response);\n        },\n        (error: any) => {\n          console.error('Error in sending the query to the backend', error);\n        }\n      );\n      this.inputValue = ''; // Clear the input value after sending the query\n    }\n  }\n  \n  \n\n  refreshQuery() {\n    if (this.chatData.length > 0) {\n      const lastQuery = this.chatData[this.chatData.length - 1].query;\n      this.http.post(this.djangoUrl, { query: lastQuery }).subscribe(\n        (response: any) => {\n          // Handle the response from the backend here\n          console.log('Response from backend:', response);\n        },\n        (error: any) => {\n          console.error('Error in sending the query to the backend', error);\n        }\n      );\n    } else {\n      console.log('No queries available to refresh');\n    }\n  }\n}\n\n","\n<style>\n  :host {\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n    \n    color: #333;\n    box-sizing: border-box;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    --custom-send-color-green:#0ab39c;\n    --custom-refresh-color-blue:#0e457e;\n    --custom-chat-back-color:#f5f5f5;\n    --custom-user-query-color:#dcedf9;\n    --custom-response-color:#fafafa;\n  }\n  \n  ::-webkit-scrollbar {\n  width: 5px;\n}\n\n/* Track */\n::-webkit-scrollbar-track {\n  background: #f1f1f1;\n}\n\n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: #888;\n}\n\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n  background: #555;\n}\n\n  .mainContainer{\n    height: 100vh;\n    overflow: hidden;\n  }\n  .contentContainer{\n    height: 90%;\n    background-color: var(--custom-chat-back-color);\n    position: relative;\n  }\n  .navContainer{\n\n    overflow: hidden;\n    padding:1rem 15px;\n  \n  }\n  .navPortions{\n    font-size: smaller;\n\n  }\n  .mainIcon{\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n  }\n\n  .mainIcon>.logoDiv{\n    background-color: var(--custom-chat-back-color);\n  }\n\n  .logoDiv {\n  border-radius: 50%;\n  \n  width: 2.5rem;\n  height: 2.5rem;\n  margin-right: 0.5rem;\n  display: flex;\n  justify-content: center; /* Horizontally align content */\n  align-items: center; /* Vertically align content */\n  }\n\n  .responseLogo{\n    background-color: rgb(252, 253, 253);\n  }\n  \n\n  .logoDiv img {\n    max-width: 80%;\n    max-height: 80%;\n    display: block;\n  }\n\n  .mainIconHeaders{\n    display: flex;\n    flex-direction: column;\n    \n  }\n\n  .chatContainer{\n    background-color: var(--custom-chat-back-color);\n    height:85% ;\n    overflow-x: hidden;\n    overflow-y: scroll;\n  }\n\n  .chats{\n    \n    margin: 0.5rem 3rem;\n    \n  }\n\n  .userQuery{\n    background-color: var(--custom-user-query-color);\n    border-radius: 3px;\n    padding: 0 0.4rem;\n    font-size: small;\n    margin-bottom: 0.2rem;\n    max-width: 60%;\n    align-self: flex-end;\n    margin-left: auto;\n    width: fit-content;\n  }\n  .userQueryDiv>p{\n    font-size:x-small;\n    align-self: flex-end;\n    margin-left: auto;\n  }\n  .userQueryDiv{\n    margin: 0.2rem 0;\n    display: flex;\n    flex-direction: column;  \n\n  }\n  .response{\n    align-self: flex-start;\n    margin-right: auto;\n    display: flex;\n    flex-direction: row;\n    margin-bottom: 0.2rem;\n  }\n  .responseBox{\n    background-color: var(--custom-response-color);\n    display: flex;\n    justify-content: flex-end;\n    padding: 0 0.4rem;\n    font-size: small;\n    width: fit-content;\n    max-width: 60%;\n    border-radius: 3px;\n  }\n\n  .queryContainer{\n    background-color: rgb(252, 253, 253);\n    height:fit-content;\n    width: 100%;\n    justify-content: space-evenly;\n    position: absolute;\n    bottom: 0;\n    padding:0.5rem 15px;\n  }\n\n  .queryEntryContainer{\n    \n    width:85%\n  }\n\n  .queryEntryContainer{\n    border-radius: 3px;\n\n  }\n  .queryButtons{\n    \n    display: flex;\n    flex-direction: row;\n  }\n  .queryButtons>button{\n    border: none;\n    overflow: hidden;\n    display: flex;\n    outline: none;\n    align-items: center;\n    justify-content: center;\n    height: 2rem;\n    width: 2rem;\n  }\n\n  .iconImage{\n    width: 1rem;\n    height: 1rem;\n  }\n\n  .sendBtn{\n    background-color: var(--custom-send-color-green);\n  }\n\n  .refreshBtn{\n    background-color: var(--custom-refresh-color-blue) !important;\n  }\n\n  .queryInput{\n    background-color: transparent;\n    outline: none;\n    width: 100%;\n    border: none;\n    font-size: 0.8rem;\n  }\n  /* Responsive Styles */\n  @media screen and (max-width: 767px) {\n    .card-container > *:not(.circle-link) ,\n    .terminal {\n      width: 100%;\n    }\n\n    .card:not(.highlight-card) {\n      height: 16px;\n      margin: 8px 0;\n    }\n\n    .card.highlight-card span {\n      margin-left: 72px;\n    }\n\n    svg#rocket-smoke {\n      right: 120px;\n      transform: rotate(-5deg);\n    }\n  }\n\n  @media screen and (max-width: 575px) {\n    svg#rocket-smoke {\n      display: none;\n      visibility: hidden;\n    }\n  }\n</style>\n\n\n<div class=\"container-fluid mainContainer bg-body-secondary d-flex align-items-center justify-content-center \">\n  <div class=\"container  contentContainer m-0 p-0\" >\n    <div class=\"container navContainer  m-0 p-1 bg-body-tertiary d-flex align-items-center justify-content-center\" >\n      <nav class=\"navbar navbar-expand-lg  navPortions col-12 p-0\">\n        <div class=\"container-sm m-0 \">\n          <div class=\"mainIcon\">\n            <div class=\"logoDiv\">\n              <img src=\"assets/logo.png\" alt=\"Logo\"/>\n            </div>\n            <div class=\"mainIconHeaders\">\n              <a class=\"navbar-brand  fw-medium lh-1 \" style=\"font-size: 14px;\" href=\"#\">Salez.ai</a>\n              <a class=\"navbar-brand  fw-lighter lh-1 \" style=\"font-size: 11px;\" href=\"#\">Ai Bot</a>\n            </div>\n\n          </div>\n\n\n        </div>\n      </nav>\n    </div>\n    <div class=\"container chatContainer\">\n      \n      <div class=\"chats\">\n        <div class=\"chatDiv\" *ngFor=\"let data of chatData\">\n          <div class=\"userQueryDiv\">\n            <div class=\"userQuery\">\n              <p>{{ data.query }}</p>\n            </div>\n            <p>{{ data.time }}</p>\n\n          </div>\n\n          <div class=\"response\">\n            <div class=\"responseLogo logoDiv\">\n              <img src=\"assets/logo.png\" alt=\"Logo\"/>\n            </div>\n            <div class=\"responseBox\">\n              <p>{{ data.response }}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n    </div>\n    <div class=\"container queryContainer m-0 d-flex align-items-center\">\n      <div class=\"queryEntryContainer m-0 p-1 bg-body-secondary\">\n        <input class=\"queryInput\" type=\"text\" placeholder=\"Ask me anything.\" (keyup.enter)=\"sendQuery($event)\" [(ngModel)]=\"inputValue\" />\n      </div>\n      \n      \n      <div class=\"queryButtons\">\n        \n          <button type=\"button \" class=\"btn btn-primary m-1 sendBtn\" (click)=\"sendQuery()\">\n            <img class=\"iconImage\" src=\"assets/send.png\" alt=\"Send\">\n          </button>\n\n        \n        \n          <button type=\"button \" class=\"btn btn-primary m-1 refreshBtn\" (click)=\"refreshQuery()\">\n            <img class=\"iconImage\" src=\"assets/refresh.png\" alt=\"Refresh\">\n          </button>\n\n      </div> \n\n\n    </div>\n  </div>\n</div>\n\n<router-outlet></router-outlet>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}